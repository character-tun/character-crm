import React from 'react';
import { useNavigate } from 'react-router-dom';
import { motion, useScroll, useTransform } from 'framer-motion';
import {
  Box,
  Container,
  Grid,
  Stack,
  Typography,
  Button,
  Card,
  CardContent,
  CardHeader,
  CardActions,
  Chip,
  Avatar,
  useTheme,
  useMediaQuery,
} from '@mui/material';

// Simple fade/slide variants for sections
const fadeIn = {
  hidden: { opacity: 0, y: 24 },
  show: { opacity: 1, y: 0, transition: { duration: 0.6, ease: 'easeOut' } },
};

const staggerContainer = {
  hidden: {},
  show: { transition: { staggerChildren: 0.08 } },
};

export default function Landing() {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));
  const navigate = useNavigate();

  // Parallax bg for hero
  const { scrollYProgress } = useScroll();
  const y = useTransform(scrollYProgress, [0, 1], [0, 80]);
  const opacity = useTransform(scrollYProgress, [0, 0.5, 1], [1, 0.9, 0.8]);

  const goOnboarding = () => navigate('/bootstrap');
  const goTryFree = () => navigate('/bootstrap');

  return (
    <Box sx={{ bgcolor: theme.palette.background.default }}>
      {/* Hero */}
      <Box component={motion.section} initial="hidden" animate="show" variants={staggerContainer}
        sx={{ pt: 8, pb: 10, position: 'relative', overflow: 'hidden' }}>
        <motion.div style={{ y, opacity }}>
          <Box sx={{
            position: 'absolute',
            top: -80,
            left: -80,
            width: 320,
            height: 320,
            borderRadius: '50%',
            bgcolor: theme.palette.mode === 'dark' ? 'primary.dark' : 'secondary.light',
            filter: 'blur(60px)',
            opacity: 0.35,
          }} />
        </motion.div>
        <Container maxWidth="lg">
          <Grid container spacing={6} alignItems="center">
            <Grid item xs={12} md={6}>
              <Stack spacing={3} component={motion.div} variants={fadeIn}>
                <Chip color="primary" label="Character ERP Cloud" sx={{ alignSelf: 'flex-start' }} />
                <Typography variant={isMobile ? 'h4' : 'h3'} fontWeight={700}>
                  –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Ç—É–¥–∏–µ–π –¥–µ—Ç–µ–π–ª–∏–Ω–≥–∞, –º–æ–π–∫–∏ –∏ –æ–∫–ª–µ–π–∫–∏ –≤ –æ–±–ª–∞–∫–µ
                </Typography>
                <Typography variant="h6" color="text.secondary">
                  –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∂–∏–≤—ã–µ –æ—Ç—á—ë—Ç—ã, –º–∞–≥–∞–∑–∏–Ω –∏ –∑–∞—Ä–ø–ª–∞—Ç—ã –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.
                </Typography>
                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>
                  <Button size="large" variant="contained" color="primary" onClick={goTryFree}>
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
                  </Button>
                  <Button size="large" variant="outlined" color="primary" onClick={goOnboarding}>
                    –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
                  </Button>
                </Stack>
              </Stack>
            </Grid>
            <Grid item xs={12} md={6}>
              <Box component={motion.div} variants={fadeIn}
                sx={{
                  borderRadius: theme.shape.borderRadius,
                  overflow: 'hidden',
                  boxShadow: 'var(--mui-shadow-2)',
                  border: `1px solid ${theme.palette.divider}`,
                }}>
                {/* Placeholder media: screenshots/video */}
                <Box sx={{ position: 'relative', pt: '56.25%', bgcolor: theme.palette.background.paper }}>
                  <Box sx={{ position: 'absolute', inset: 0, display: 'grid', placeItems: 'center' }}>
                    <Typography variant="subtitle1" color="text.secondary">
                      –í–∏–¥–µ–æ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞ (–¥–µ–º–æ)
                    </Typography>
                  </Box>
                </Box>
              </Box>
            </Grid>
          </Grid>
        </Container>
      </Box>

      {/* –î–ª—è –∫–æ–≥–æ */}
      <Box component={motion.section} initial="hidden" whileInView="show" viewport={{ once: true, amount: 0.2 }} variants={staggerContainer} sx={{ py: 8 }}>
        <Container maxWidth="lg">
          <Typography component={motion.h2} variants={fadeIn} variant="h4" fontWeight={700} sx={{ mb: 4 }}>
            –î–ª—è –∫–æ–≥–æ
          </Typography>
          <Grid container spacing={3}>
            {[{
              title: '–î–µ—Ç–µ–π–ª–∏–Ω–≥',
              desc: '–ó–∞–∫–∞–∑—ã, —Å—Ç–∞—Ç—É—Å—ã, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ä–∞–±–æ—Ç, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.',
              emoji: '‚ú®',
            }, {
              title: '–ê–≤—Ç–æ–º–æ–π–∫–∞',
              desc: '–°–º–µ–Ω—ã, –∫–∞—Å—Å–∞, —Å–∫–ª–∞–¥ —Ö–∏–º–∏–∏, –ø—Ä–æ—Å—Ç–∞—è –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å.',
              emoji: 'üöø',
            }, {
              title: '–°—Ç—É–¥–∏—è –æ–∫–ª–µ–π–∫–∏',
              desc: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–∞—Ä—Ç—ã —Ä–∞—Å–∫—Ä–æ—è, —Ñ–∏–Ω–∞–Ω—Å—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞.',
              emoji: 'üéØ',
            }].map((p) => (
              <Grid key={p.title} item xs={12} md={4}>
                <Card component={motion.div} variants={fadeIn}>
                  <CardHeader avatar={<Avatar>{p.emoji}</Avatar>} title={p.title} />
                  <CardContent>
                    <Typography color="text.secondary">{p.desc}</Typography>
                  </CardContent>
                </Card>
              </Grid>
            ))}
          </Grid>
        </Container>
      </Box>

      {/* –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
      <Box component={motion.section} initial="hidden" whileInView="show" viewport={{ once: true, amount: 0.2 }} variants={staggerContainer} sx={{ py: 8, bgcolor: theme.palette.background.paper }}>
        <Container maxWidth="lg">
          <Typography component={motion.h2} variants={fadeIn} variant="h4" fontWeight={700} sx={{ mb: 4 }}>
            –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
          </Typography>
          <Grid container spacing={3}>
            {[
              { title: '–ñ–∏–≤—ã–µ –æ—Ç—á—ë—Ç—ã', desc: '–ü—Ä–∏–±—ã–ª—å, –∑–∞—Ä–ø–ª–∞—Ç—ã, –∫–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –æ–±–æ—Ä–æ—Ç—ã —Å–∫–ª–∞–¥–∞.' },
              { title: '–ú–∞–≥–∞–∑–∏–Ω', desc: '–ü—Ä–æ–¥–∞–∂–∏, –≤–æ–∑–≤—Ä–∞—Ç—ã, —Ç–æ–≤–∞—Ä—ã –∏ —É—á—ë—Ç –æ–ø–ª–∞—Ç—ã.' },
              { title: '–û–Ω–±–æ—Ä–¥–∏–Ω–≥', desc: '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ‚Äë–¥–∞–Ω–Ω—ã—Ö.' },
              { title: 'RBAC', desc: '–†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.' },
              { title: '–®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', desc: '–°—á–µ—Ç–∞, –∞–∫—Ç—ã, –¥–æ–≥–æ–≤–æ—Ä—ã, –ø–µ—á–∞—Ç—å –∏ PDF.' },
              { title: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å', desc: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∑–∞–Ω—è—Ç–æ—Å—Ç—å –±–æ–∫—Å–æ–≤, –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.' },
            ].map((f) => (
              <Grid key={f.title} item xs={12} sm={6} md={4}>
                <Card component={motion.div} variants={fadeIn}>
                  <CardHeader title={f.title} />
                  <CardContent>
                    <Typography color="text.secondary">{f.desc}</Typography>
                  </CardContent>
                </Card>
              </Grid>
            ))}
          </Grid>
        </Container>
      </Box>

      {/* –¢–∞—Ä–∏—Ñ—ã */}
      <Box component={motion.section} initial="hidden" whileInView="show" viewport={{ once: true, amount: 0.2 }} variants={staggerContainer} sx={{ py: 8 }}>
        <Container maxWidth="lg">
          <Typography component={motion.h2} variants={fadeIn} variant="h4" fontWeight={700} sx={{ mb: 4 }}>
            –¢–∞—Ä–∏—Ñ—ã
          </Typography>
          <Grid container spacing={3}>
            {[{
              name: '–°—Ç–∞—Ä—Ç', price: '0 ‚ÇΩ', features: ['–î–µ–º–æ‚Äë–¥–∞–Ω–Ω—ã–µ', '–û–Ω–±–æ—Ä–¥–∏–Ω–≥', '1 —Å—Ç—É–¥–∏—è']
            }, {
              name: '–ü—Ä–æ', price: '1 990 ‚ÇΩ/–º–µ—Å', features: ['–û—Ç—á—ë—Ç—ã', '–°–∫–ª–∞–¥ + –ú–∞–≥–∞–∑–∏–Ω', 'RBAC', '3 —Å—Ç—É–¥–∏–∏']
            }, {
              name: '–ë–∏–∑–Ω–µ—Å', price: '4 990 ‚ÇΩ/–º–µ—Å', features: ['–í—Å–µ –º–æ–¥—É–ª–∏', '–î–æ–∫—É–º–µ–Ω—Ç—ã', '5+ —Å—Ç—É–¥–∏–π']
            }].map((plan) => (
              <Grid key={plan.name} item xs={12} md={4}>
                <Card component={motion.div} variants={fadeIn}>
                  <CardHeader title={plan.name} subheader={plan.price} />
                  <CardContent>
                    <Stack spacing={1}>
                      {plan.features.map((it) => (
                        <Stack key={it} direction="row" spacing={1} alignItems="center">
                          <Chip size="small" color="success" label="" />
                          <Typography variant="body2">{it}</Typography>
                        </Stack>
                      ))}
                    </Stack>
                  </CardContent>
                  <CardActions>
                    <Button fullWidth variant="contained" onClick={goTryFree}>–í—ã–±—Ä–∞—Ç—å</Button>
                  </CardActions>
                </Card>
              </Grid>
            ))}
          </Grid>
        </Container>
      </Box>

      {/* –û—Ç–∑—ã–≤—ã –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—ã */}
      <Box component={motion.section} initial="hidden" whileInView="show" viewport={{ once: true, amount: 0.2 }} variants={staggerContainer} sx={{ py: 8, bgcolor: theme.palette.background.paper }}>
        <Container maxWidth="lg">
          <Grid container spacing={6}>
            <Grid item xs={12} md={6}>
              <Typography component={motion.h3} variants={fadeIn} variant="h5" fontWeight={700} sx={{ mb: 2 }}>
                –û—Ç–∑—ã–≤—ã
              </Typography>
              <Stack spacing={2}>
                {["–õ—É—á—à–∏–π ERP –¥–ª—è –¥–µ—Ç–µ–π–ª–∏–Ω–≥–∞ ‚Äî –≤—Å—ë –ø—Ä–æ–∑—Ä–∞—á–Ω–æ.", "–ó–∞–ø—É—Å—Ç–∏–ª–∏—Å—å –∑–∞ –¥–µ–Ω—å –∏ –Ω–∞—á–∞–ª–∏ —Å—á–∏—Ç–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—ã.", "–ú–∞–≥–∞–∑–∏–Ω –∏ —Å–∫–ª–∞–¥ ‚Äî —Å—É–ø–µ—Ä —É–¥–æ–±–Ω–æ."].map((q, idx) => (
                  <Card key={idx} component={motion.div} variants={fadeIn}>
                    <CardContent>
                      <Typography>‚Äú{q}‚Äù</Typography>
                    </CardContent>
                  </Card>
                ))}
              </Stack>
            </Grid>
            <Grid item xs={12} md={6}>
              <Typography component={motion.h3} variants={fadeIn} variant="h5" fontWeight={700} sx={{ mb: 2 }}>
                –ü–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–µ —Å—Ç—É–¥–∏–∏
              </Typography>
              <Stack direction="row" gap={2} flexWrap="wrap">
                {[1,2,3,4,5,6,7,8].map((i) => (
                  <Avatar key={i} variant="rounded" sx={{ width: 72, height: 72 }}>
                    C{i}
                  </Avatar>
                ))}
              </Stack>
            </Grid>
          </Grid>
        </Container>
      </Box>

      {/* CTA bottom */}
      <Box component={motion.section} initial="hidden" whileInView="show" viewport={{ once: true, amount: 0.2 }} variants={staggerContainer} sx={{ py: 10 }}>
        <Container maxWidth="md">
          <Stack spacing={3} alignItems="center" textAlign="center">
            <Typography component={motion.h2} variants={fadeIn} variant="h4" fontWeight={700}>
              –ì–æ—Ç–æ–≤—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?
            </Typography>
            <Typography component={motion.p} variants={fadeIn} color="text.secondary">
              –ù–∞—á–Ω–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚Äî –∑–∞–≥—Ä—É–∑–∏–º –¥–µ–º–æ‚Äë–¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–∫–∞–∂–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–æ–¥—É–ª–∏.
            </Typography>
            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>
              <Button size="large" variant="contained" onClick={goTryFree}>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ</Button>
              <Button size="large" variant="outlined" onClick={goOnboarding}>–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ</Button>
            </Stack>
          </Stack>
        </Container>
      </Box>
    </Box>
  );
}